plugins {
    id 'java'
    id 'nebula.nebula-release' version '4.0.1'
    id 'org.sonarqube' version '2.8'
}

apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

group 'com.tekion.accounting.fs'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    test
    repositories {
        jcenter()
    }
    jacoco {
        toolVersion =  "0.8.7"
    }
}

def allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"

List<String> exclusionList=["**/repo*/**/*",
                            "**/repo*/*",
                            "**/bean*/*",
                            "**/bean*/**/*",
                            "**/enum*/*",
                            "**/enum*/**/*",
                            "**/dto*/*",
                            "**/dto*/**/*",
                            "**/*Dto.java",
                            "**/*RepoImpl.java",
                            "**/api_restricted/**",
                            "**/api_restricted/*",
                            "**/api/**",
                            "**/api/*",
                            "**/com/tekion/accounting/fs/client/**",
                            "**/common/**",
                            "**/models/**"
                          ]



subprojects {
    dependencies {
        testCompile 'junit:junit:4.11'
    }
    jacocoTestReport {
        enabled(true)
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories =  files(sourceSets.main.output)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
            html.destination file("$buildDir/jacocoHtml")
        }
    }
    test{
        useJUnit()
        ignoreFailures = true
        finalizedBy jacocoTestReport
    }
    sonarqube {
        properties {
            property "sonar.jacoco.reportPaths", allTestCoverageFile
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    // Gather execution data from all subprojects
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

sonarqube {
    Properties props = new Properties();
    String rootDirAbc="${project.buildDir}";
    List<String> pathList = rootDirAbc.split("/");
    pathList.remove(pathList.size()-1);
    rootDirAbc = pathList.join("/");
    File propsFile = new File(rootDirAbc+"/fs-manager/src/test/resources/sonar.properties")
    props.load(propsFile.newDataInputStream())
    properties {
        property "sonar.host.url", props.getProperty("sonar.host.url")
        property "sonar.login", props.getProperty("sonar.login")
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.projectKey", "FinancialStatementsService"
        property "sonar.projectName", "FinancialStatementsService"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
        property "sonar.coverage.exclusions", exclusionList
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
